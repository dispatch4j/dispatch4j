name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string
      create_release:
        description: 'Create GitHub release'
        required: true
        type: boolean
        default: true

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      changelog: ${{ steps.changelog.outputs.changelog }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Determine version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            VERSION="${GITHUB_REF#refs/tags/v}"
          else
            VERSION="${{ github.event.inputs.version }}"
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Release version: ${VERSION}"
      
      - name: Generate changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version-file: './gradle.properties'
          version-path: 'version'
          preset: 'angular'
          tag-prefix: 'v'
          output-file: 'CHANGELOG.md'
          skip-version-file: false
          skip-commit: true
      
      - name: Create release notes
        id: release_notes
        run: |
          cat > release-notes.md << EOF
          ## What's Changed
          
          ${{ steps.changelog.outputs.clean_changelog }}
          
          ## Contributors
          
          Thank you to all contributors who made this release possible!
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/...v${{ steps.version.outputs.version }}
          EOF
      
      - name: Upload release notes
        uses: actions/upload-artifact@v4
        with:
          name: release-notes
          path: release-notes.md

  build-and-test:
    runs-on: ubuntu-latest
    needs: prepare-release
    strategy:
      matrix:
        java: [21, 22, 23]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: gradle
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build with Gradle
        run: ./gradlew build -Pversion=${{ needs.prepare-release.outputs.version }} --no-daemon
      
      - name: Run tests
        run: ./gradlew test -Pversion=${{ needs.prepare-release.outputs.version }} --no-daemon
      
      - name: Upload artifacts
        if: matrix.java == 21
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            **/build/libs/*.jar
            !**/build/libs/*-javadoc.jar
            !**/build/libs/*-sources.jar

  publish-artifacts:
    runs-on: ubuntu-latest
    needs: [prepare-release, build-and-test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: gradle
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Publish to GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew publish \
            -Pversion=${{ needs.prepare-release.outputs.version }} \
            -PgithubUsername=${{ github.actor }} \
            -PgithubToken=${{ secrets.GITHUB_TOKEN }} \
            --no-daemon
      
      - name: Publish to Maven Central
        if: secrets.MAVEN_CENTRAL_USERNAME != ''
        env:
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        run: |
          ./gradlew publishToMavenCentral \
            -Pversion=${{ needs.prepare-release.outputs.version }} \
            -PmavenCentralUsername=$MAVEN_CENTRAL_USERNAME \
            -PmavenCentralPassword=$MAVEN_CENTRAL_PASSWORD \
            -Psigning.key=$SIGNING_KEY \
            -Psigning.password=$SIGNING_PASSWORD \
            --no-daemon

  create-release:
    runs-on: ubuntu-latest
    needs: [prepare-release, publish-artifacts]
    if: github.event_name == 'push' || github.event.inputs.create_release == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download release notes
        uses: actions/download-artifact@v4
        with:
          name: release-notes
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: artifacts
      
      - name: Create release bundle
        run: |
          cd artifacts
          zip -r ../dispatch4j-${{ needs.prepare-release.outputs.version }}.zip .
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.prepare-release.outputs.version }}
          name: Release v${{ needs.prepare-release.outputs.version }}
          body_path: release-notes.md
          draft: false
          prerelease: false
          files: |
            dispatch4j-${{ needs.prepare-release.outputs.version }}.zip
            artifacts/**/*.jar
      
      - name: Update documentation
        run: |
          echo "## Installation" > INSTALLATION.md
          echo "" >> INSTALLATION.md
          echo "### Maven" >> INSTALLATION.md
          echo '```xml' >> INSTALLATION.md
          echo '<dependency>' >> INSTALLATION.md
          echo '  <groupId>com.github.${{ github.repository_owner }}</groupId>' >> INSTALLATION.md
          echo '  <artifactId>dispatch4j-spring-boot-starter</artifactId>' >> INSTALLATION.md
          echo '  <version>${{ needs.prepare-release.outputs.version }}</version>' >> INSTALLATION.md
          echo '</dependency>' >> INSTALLATION.md
          echo '```' >> INSTALLATION.md
          echo "" >> INSTALLATION.md
          echo "### Gradle" >> INSTALLATION.md
          echo '```gradle' >> INSTALLATION.md
          echo "implementation 'com.github.${{ github.repository_owner }}:dispatch4j-spring-boot-starter:${{ needs.prepare-release.outputs.version }}'" >> INSTALLATION.md
          echo '```' >> INSTALLATION.md
      
      - name: Create PR for documentation update
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'docs: update installation instructions for v${{ needs.prepare-release.outputs.version }}'
          title: 'docs: update installation instructions for v${{ needs.prepare-release.outputs.version }}'
          body: |
            This PR updates the installation instructions for the new release v${{ needs.prepare-release.outputs.version }}.
            
            Auto-generated by release workflow.
          branch: docs/update-version-${{ needs.prepare-release.outputs.version }}
          delete-branch: true