name: Publish to GitHub Packages

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        type: string

permissions:
  contents: read
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: gradle
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2
      
      - name: Set version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
          else
            VERSION="${{ github.event.inputs.version }}"
          fi
          echo "VERSION=${VERSION#v}" >> $GITHUB_ENV
          echo "Publishing version: ${VERSION#v}"
      
      - name: Build artifacts
        run: ./gradlew build -Pversion=${{ env.VERSION }} --no-daemon
      
      - name: Run tests
        run: ./gradlew test -Pversion=${{ env.VERSION }} --no-daemon
      
      - name: Publish to GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew publish \
            -Pversion=${{ env.VERSION }} \
            -PgithubUsername=${{ github.actor }} \
            -PgithubToken=${{ secrets.GITHUB_TOKEN }} \
            --no-daemon
      
      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          artifact-name: sbom-${{ env.VERSION }}.spdx.json
          output-file: ./sbom.spdx.json
      
      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ env.VERSION }}
          path: sbom.spdx.json
      
      - name: Create release artifacts
        if: github.event_name == 'release'
        run: |
          mkdir -p release-artifacts
          find . -type f -name "*.jar" -not -path "./.*" -exec cp {} release-artifacts/ \;
          cd release-artifacts && zip -r ../dispatch4j-${{ env.VERSION }}.zip .
      
      - name: Upload release artifacts
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dispatch4j-${{ env.VERSION }}.zip
          asset_name: dispatch4j-${{ env.VERSION }}.zip
          asset_content_type: application/zip