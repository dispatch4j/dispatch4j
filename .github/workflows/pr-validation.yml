name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

permissions:
  contents: read
  pull-requests: write
  issues: write
  checks: write

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: PR Title Check
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
      
      - name: Label PR
        uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Check PR Size
        uses: codelytv/pr-size-labeler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          xs_label: 'size/XS'
          xs_max_size: 10
          s_label: 'size/S'
          s_max_size: 100
          m_label: 'size/M'
          m_max_size: 500
          l_label: 'size/L'
          l_max_size: 1000
          xl_label: 'size/XL'
      
      - name: Welcome first-time contributors
        uses: actions/first-interaction@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          pr-message: |
            Welcome to dispatch4j! üéâ
            
            Thank you for your first contribution! We're excited to review your pull request.
            Please make sure you've:
            - [ ] Added tests for your changes
            - [ ] Updated documentation if needed
            - [ ] Followed the coding standards in CLAUDE.md
            
            Our maintainers will review your PR soon!

  lint-and-format:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: gradle
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Check code formatting
        run: ./gradlew spotlessCheck --no-daemon || true
      
      - name: Run Checkstyle
        run: ./gradlew checkstyleMain checkstyleTest --no-daemon || true
      
      - name: Upload Checkstyle results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-results
          path: '**/build/reports/checkstyle/'
      
      - name: Comment PR with issues
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå Code quality checks failed. Please review the Checkstyle and formatting reports.'
            })

  test-coverage:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: gradle
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Run tests with coverage
        run: ./gradlew test jacocoTestReport --no-daemon
      
      - name: Generate coverage report
        run: ./gradlew jacocoTestCoverageVerification --no-daemon || true
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: '**/build/reports/jacoco/test/jacocoTestReport.xml'
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
      
#      - name: JaCoCo Code Coverage Report
#        uses: PavanMudigonda/jacoco-reporter@v4.9
#        with:
#          coverage_results_path: '**/build/reports/jacoco/test/jacocoTestReport.xml'
#          coverage_report_name: Coverage
#          coverage_report_title: JaCoCo Coverage Report
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          skip_check_run: false
#          minimum_coverage: 80
#          fail_below_threshold: false
#          publish_only_summary: false

  compatibility-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: gradle
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Check API compatibility
        run: |
          if [ -f ".baseline-version" ]; then
            BASELINE=$(cat .baseline-version)
            ./gradlew revapi -PbaselineVersion=$BASELINE --no-daemon || true
          else
            echo "No baseline version found, skipping API compatibility check"
          fi
      
      - name: Generate API diff report
        if: always()
        run: |
          if [ -d "build/reports/revapi" ]; then
            echo "API changes detected - see revapi report"
          fi